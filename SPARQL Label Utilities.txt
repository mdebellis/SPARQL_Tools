PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX pizza: <http://www.semanticweb.org/pizzatutorial/ontologies/2020/PizzaTutorial#>

#The following SPARQL queries will add a name based on the user supplied IRI
#The assumptions are that classes and individuals have names in CamelBack and the properties
#have names in reverseCamelBack. If the IRIs follow that scheme the labels are: "Camel Back" and 
#"reverse Camel Back" respectively. 
#This is meant to be used in any full implementation of SPARQL.
#I.e., NOT for Snap SPARQL in Protege, see the file Snap SPARQL Label Utilities  for that. 
#Each transformation checks to see if a label already exists and doesn't create one
#if one already exists. To change that remove the !BOUND test in the FILETERs

# Useful for debugging: SELECT ?c ?name ?lblname
# Added test: !isBlank(?c) to filter out 
# Anonymous classes which don't require labels
# Changed the way the class labeling query finds classes
# Did this because it can be useful to work in Allegro without
# Adding materializer inferences

INSERT {?c rdfs:label ?lblname.}
WHERE {?c a owl:Class.
        BIND(STRAFTER(STR(?c), '#') as ?name)
	# First, separate lowercase-uppercase transitions that are not part of an acronym
    	BIND(REPLACE(?name, "([a-z])([A-Z])", "$1 $2") AS ?step1)
    	# Then, separate acronyms from following words
    	BIND(REPLACE(?step1, "([A-Z]+)([A-Z][a-z])", "$1 $2") AS ?lblname)
	OPTIONAL{?c rdfs:label ?elbl.}
	FILTER(?c != owl:Thing && ?c != owl:Nothing && !isBlank(?c) && !BOUND(?elbl))}
		
INSERT {?i rdfs:label ?lblname.}
WHERE {?i a owl:Thing.
        BIND(STRAFTER(STR(?i), '#') as ?name)
	# First, separate lowercase-uppercase transitions that are not part of an acronym
    	BIND(REPLACE(?name, "([a-z])([A-Z])", "$1 $2") AS ?step1)
    	# Then, separate acronyms from following words
    	BIND(REPLACE(?step1, "([A-Z]+)([A-Z][a-z])", "$1 $2") AS ?lblname)
	OPTIONAL{?i rdfs:label ?elbl.}
	FILTER(!BOUND(?elbl))}			

INSERT {?p rdfs:label ?lblname.}
WHERE {?p a owl:ObjectProperty.
        BIND(STRAFTER(STR(?p), '#') as ?name)
	# First, separate lowercase-uppercase transitions that are not part of an acronym
    	BIND(REPLACE(?name, "([a-z])([A-Z])", "$1 $2") AS ?step1)
    	# Then, separate acronyms from following words
    	BIND(REPLACE(?step1, "([A-Z]+)([A-Z][a-z])", "$1 $2") AS ?lblname)
	OPTIONAL{?p rdfs:label ?elbl.}
	FILTER(!BOUND(?elbl))}	

INSERT {?p rdfs:label ?lblname.}
WHERE {?p a owl:DatatypeProperty.
        BIND(STRAFTER(STR(?p), '#') as ?name)
	# First, separate lowercase-uppercase transitions that are not part of an acronym
    	BIND(REPLACE(?name, "([a-z])([A-Z])", "$1 $2") AS ?step1)
    	# Then, separate acronyms from following words
    	BIND(REPLACE(?step1, "([A-Z]+)([A-Z][a-z])", "$1 $2") AS ?lblname)		
	OPTIONAL{?p rdfs:label ?elbl.}
	FILTER(!BOUND(?elbl))}	



